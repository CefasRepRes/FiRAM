usethis::use_gpl3_license()
roxygen2::roxygensi
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::install()
library(FiRAM)
BioeconomicParams(file = "../params.csv")
params <- BioeconomicParams(file = "../params.csv")
save(params, file = "data/params.RData")
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
usethis::use_vignette()
usethis::use_vignette("FiRAM")
library(stringr)
# Full list of types is here: https://docs.citationstyles.org/en/stable/specification.html#appendix-iii-types
raw <-
"@article{10.1093/icesjms/fsab087,
author = {Tidbury, Hannah J and Muench, Angela and Lamb, Philip D and Hyder, Kieran},
title = \"{Balancing biological and economic goals in commercial and recreational fisheries: systems modelling of sea bass fisheries}\",
journal = {ICES Journal of Marine Science},
volume = {78},
number = {5},
pages = {1793-1803},
year = {2021},
month = {05},
abstract = \"{The importance of social and economic factors, in addition to biological factors, in fisheries management is being increasingly recognised. However, exploration of trade-offs between biological, social, and economic factors under different sustainable catch limits for recreational and commercial fisheries is limited, especially in Europe. The European sea bass (Dicentrarchus labrax) is valuable and important for both commercial and recreational fisheries. Stocks have rapidly declined and management measures have been implemented, but trade-offs between social, biological, and economic factors have not been explicitly considered. In this study, a system dynamics model framework capturing biological and economic elements of the European sea bass fishery was developed and refined to incorporate a catch limit reflecting sustainable fishing with adjustable partition between recreational and commercial sectors, under low, medium, or high recruitment. Model outputs were used to explore the relative impact of different catch allocations on trade-offs between biological sustainability and economic impact when recruitment was limiting or not. Recruitment had a large impact on the fish population dynamics and the viability of the sectors. At high and moderate recruitment, management contributed to stock sustainability and sector economic impact, but recruitment is important in determining the balance between sectors.}\",
issn = {1054-3139},
doi = {10.1093/icesjms/fsab087},
url = {https://doi.org/10.1093/icesjms/fsab087},
eprint = {https://academic.oup.com/icesjms/article-pdf/78/5/1793/40323664/fsab087.pdf},
}
"
extract_params <- function(raw, field = "author"){
index <- str_locate(raw, paste0(field, " = \\{"))
index_end <- index[2]
remainder <- str_sub(raw, start = index_end + 1 )
params_end <- str_locate(remainder, "\\}")[1]
if(!is.na(str_locate(remainder, "\\{")[1]) &&
str_locate(remainder, "\\{")[1] < params_end){
warning("Escaped characters in parameter values - please check!")
}
params <- str_sub(remainder, end = params_end  - 1)
if(field != "author"){
return(params)
}
params_lower <- str_to_lower(params)
#Split up by people
new_author_starts <- str_locate_all(params_lower, "and")[[1]][, 2]
authors <- character(length(new_author_starts) + 1)
for (new_author in 1:length(new_author_starts)){
st <- 0
if (new_author != 1)
st <- new_author_starts[new_author - 1] + 2
authors[new_author] <- str_sub(params, start = st, end = new_author_starts[new_author] - 4)
}
st <- new_author_starts[length(new_author_starts)] + 2
authors[length(new_author_starts) + 1] <- str_sub(params, start = st)
# split by name
ret <- "\r\n"
for (author in authors) {
nms <- str_split(author, ", ")[[1]]
ret <- paste0(ret, "   - family: ", nms[1], "\r\n", "     given: ", nms[2], "\r\n")
}
return(ret)
}
append_field <- function(str_markdown, raw, field){
field_r <- field
if(field == "journal"){
field_r <- "container-title"
}else if(field == "pages"){
field_r <- "page"
}
return(paste0(str_markdown, "  ", field_r, ": ", extract_params(raw, field), "\r\n"))
}
# Slightly magic thing for the id too :(
tmp <- str_sub(raw, start = str_locate(raw, "\\{")[1] + 1)
tmp <- str_sub(tmp, end = str_locate(tmp, ",")[1] -  1)
str_markdown <- "- id: "
str_markdown <- paste0(str_markdown, tmp, "\r\n")
str_markdown <- append_field(str_markdown, raw, "title")
str_markdown <- append_field(str_markdown, raw, "author")
str_markdown <- append_field(str_markdown, raw, "journal")
str_markdown <- append_field(str_markdown, raw, "volume")
str_markdown <- append_field(str_markdown, raw, "pages")
str_markdown <- paste0(str_markdown, "  type: article-journal \r\n  issued: \r\n    year: ", extract_params(raw, "year"))
writeLines(str_markdown)
library(stringr)
# Full list of types is here: https://docs.citationstyles.org/en/stable/specification.html#appendix-iii-types
raw <-
"@article{10.1093/icesjms/fsab087,
author = {Tidbury, Hannah J and Muench, Angela and Lamb, Philip D and Hyder, Kieran},
title = {Balancing biological and economic goals in commercial and recreational fisheries: systems modelling of sea bass fisheries},
journal = {ICES Journal of Marine Science},
volume = {78},
number = {5},
pages = {1793-1803},
year = {2021},
month = {05},
abstract = {The importance of social and economic factors, in addition to biological factors, in fisheries management is being increasingly recognised. However, exploration of trade-offs between biological, social, and economic factors under different sustainable catch limits for recreational and commercial fisheries is limited, especially in Europe. The European sea bass (Dicentrarchus labrax) is valuable and important for both commercial and recreational fisheries. Stocks have rapidly declined and management measures have been implemented, but trade-offs between social, biological, and economic factors have not been explicitly considered. In this study, a system dynamics model framework capturing biological and economic elements of the European sea bass fishery was developed and refined to incorporate a catch limit reflecting sustainable fishing with adjustable partition between recreational and commercial sectors, under low, medium, or high recruitment. Model outputs were used to explore the relative impact of different catch allocations on trade-offs between biological sustainability and economic impact when recruitment was limiting or not. Recruitment had a large impact on the fish population dynamics and the viability of the sectors. At high and moderate recruitment, management contributed to stock sustainability and sector economic impact, but recruitment is important in determining the balance between sectors.},
issn = {1054-3139},
doi = {10.1093/icesjms/fsab087},
url = {https://doi.org/10.1093/icesjms/fsab087},
eprint = {https://academic.oup.com/icesjms/article-pdf/78/5/1793/40323664/fsab087.pdf},
}
"
extract_params <- function(raw, field = "author"){
index <- str_locate(raw, paste0(field, " = \\{"))
index_end <- index[2]
remainder <- str_sub(raw, start = index_end + 1 )
params_end <- str_locate(remainder, "\\}")[1]
if(!is.na(str_locate(remainder, "\\{")[1]) &&
str_locate(remainder, "\\{")[1] < params_end){
warning("Escaped characters in parameter values - please check!")
}
params <- str_sub(remainder, end = params_end  - 1)
if(field != "author"){
return(params)
}
params_lower <- str_to_lower(params)
#Split up by people
new_author_starts <- str_locate_all(params_lower, "and")[[1]][, 2]
authors <- character(length(new_author_starts) + 1)
for (new_author in 1:length(new_author_starts)){
st <- 0
if (new_author != 1)
st <- new_author_starts[new_author - 1] + 2
authors[new_author] <- str_sub(params, start = st, end = new_author_starts[new_author] - 4)
}
st <- new_author_starts[length(new_author_starts)] + 2
authors[length(new_author_starts) + 1] <- str_sub(params, start = st)
# split by name
ret <- "\r\n"
for (author in authors) {
nms <- str_split(author, ", ")[[1]]
ret <- paste0(ret, "   - family: ", nms[1], "\r\n", "     given: ", nms[2], "\r\n")
}
return(ret)
}
append_field <- function(str_markdown, raw, field){
field_r <- field
if(field == "journal"){
field_r <- "container-title"
}else if(field == "pages"){
field_r <- "page"
}
return(paste0(str_markdown, "  ", field_r, ": ", extract_params(raw, field), "\r\n"))
}
# Slightly magic thing for the id too :(
tmp <- str_sub(raw, start = str_locate(raw, "\\{")[1] + 1)
tmp <- str_sub(tmp, end = str_locate(tmp, ",")[1] -  1)
str_markdown <- "- id: "
str_markdown <- paste0(str_markdown, tmp, "\r\n")
str_markdown <- append_field(str_markdown, raw, "title")
str_markdown <- append_field(str_markdown, raw, "author")
str_markdown <- append_field(str_markdown, raw, "journal")
str_markdown <- append_field(str_markdown, raw, "volume")
str_markdown <- append_field(str_markdown, raw, "pages")
str_markdown <- paste0(str_markdown, "  type: article-journal \r\n  issued: \r\n    year: ", extract_params(raw, "year"))
writeLines(str_markdown)
library(FiRAM)
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::install()
devtools::install()
data("seabass", package = "FiRAM")
View(params)
?mizer-package
?`mizer-package`
?mizer::`mizer-package`
library(FiRAM)
?person
library(FiRAM)
data("seabass")
sim <- project(params, R = 1000, t_start= 1990, t_end = 30)
sim <- project(params, R = 1000, t_start= 1990, t_end = 2030)
sim <- project(params, R = 1000, t_start= 1990, t_end = 2030)
We can load in some parameter values
```{r load_data}
data("seabass")
```
Then we run it
```{r run_sim}
sim <- project(params, R = 1000, t_start= 1990, t_end = 2030)
```
Then we plot it
```{r fig.dim = c(7, 8)}
plot(sim)
```
sim <- project(params, R = 1000, t_start= 1990, t_end = 2030)
sim <- project(params, R = 1000, t_start= 2000, t_end = 2040)
plot(sim)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::build()
devtools::build()
devtools::build()
devtools::install()
usethis::use_readme_md()
?plotActivity
?project
library(FiRAM)
#Load in the params for Sea Bass in the North Sea
data("seabass")
#Change the adult mortality parameter by changing the slot in params.
params@muA <- 0.1
# Specify recruitment as 15 years of high recruitment followed by 15 years of low recruitment
recruitment <- c(rep(23151200, 15), rep(757600, 15))
#Run a simulation
sim <- BioeconomicSim(params, R = recruitment)
#Plot the results of the simulation
plot(sim)
data("seabass")
#Change the adult mortality parameter by changing the slot in params.
params@muA <- 0.1
# Specify recruitment as 15 years of high recruitment followed by 15 years of low recruitment
recruitment <- c(rep(23151200, 15), rep(757600, 15))
#Run a simulation
sim <- BioeconomicSim(params, R = recruitment, t_start = 1990)
#Plot the results of the simulation
plot(sim)
data("seabass")
#Change the adult mortality parameter by changing the slot in params.
params@muA <- 0.1
# Specify recruitment as 15 years of high recruitment followed by 15 years of low recruitment
recruitment <- c(rep(23151200, 15), rep(757600, 15))
#Run a simulation
sim <- BioeconomicSim(params, R = recruitment, t_start = 1990, t_end = 2020)
#Plot the results of the simulation
plot(sim)
data("seabass")
#Change the adult mortality parameter by changing the slot in params.
params@muA <- 0.1
# Specify recruitment as 15 years of high recruitment followed by 15 years of low recruitment
recruitment <- c(rep(23151200, 15), rep(757600, 15))
#Run a simulation
sim <- BioeconomicSim(params, R = recruitment, t_start = 1991, t_end = 2020)
#Plot the results of the simulation
plot(sim)
sim@states
data("seabass")
#Change the adult mortality parameter by changing the slot in params.
params@muA <- 0.1
# Specify recruitment as 15 years of high recruitment followed by 15 years of low recruitment
recruitment <- c(rep(23151200, 15), rep(757600, 15))
#Run a simulation
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
#Plot the results of the simulation
plot(sim)
plotStock(sim )
plotActivity(sim )
plotActivity(sim, fleet = "C")
plotActivity(sim, fleet = "R")
plotEconomicImpact(sim)
plotEconomicImpact(sim, fleet = "T")
plotActivity(sim, fleet = "R")
library(FiRAM)
#Load in the params for Sea Bass in the North Sea
data("seabass")
#Change the adult mortality parameter by changing the slot in params.
params@muA <- 0.1
# Specify recruitment as 15 years of high recruitment followed by 15 years of low recruitment
recruitment <- c(rep(23151200, 15), rep(757600, 15))
#Run a simulation
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
plotStock(sim)
#Plot number of commercial trips
plotActivity(sim, fleet = "C")
plotActivity(sim, fleet = "R")
#Plot total economic impact broken down by fleet
plotEconomicImpact(sim, fleet = "T")
plotStock(sim)
#Plot number of commercial trips
plotActivity(sim, fleet = "C")
plotActivity(sim, fleet = "R")
#Plot total economic impact broken down by fleet
plotEconomicImpact(sim, fleet = "T")
recruitment <- c(rnorm(15, 23151200, 1e2), rep(757600, 15))
#Load in the params for Sea Bass in the North Sea
data("seabass")
#Change the adult mortality parameter by changing the slot in params.
params@muA <- 0.1
# Specify recruitment as 15 years of high recruitment followed by 15 years of low recruitment
recruitment <- c(rep(23151200, 15), rep(757600, 15))
recruitment <- c(rnorm(15, 23151200, 1e2), rep(757600, 15))
#Run a simulation
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
plotStock(sim)
recruitment <- c(rnorm(15, 23151200, 1e3), rep(757600, 15))
#Run a simulation
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
```
The `project()` function returns a `BioeconomicSim` object encapsulating the model results. We can call plotting functions on this object to explore the various predictions of the model.
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
The `plotStock()` function gives the stock sizes of the adult and juvenile stocks over the duration of the simulation.
``` r
plotStock(sim)
```
![](man/figures/stockplot.png)
The `plotActivity()` function plots the number of trips each year for the commercial or recreational fleets.
``` r
plotActivity(sim, fleet = "C") # The commercial fleet activity
plotActivity(sim, fleet = "R") # The recreational fleet activity
```
![](man/figures/activity_com.png)
![](man/figures/activity_rec.png)
Finally, the `plotEconomicImpact()` function plots the GVA of each fleet for each year.
plotStock(sim)
library(FiRAM)
#Load in the params for Sea Bass in the North Sea
data("seabass")
#Change the adult mortality parameter by changing the slot in params.
params@muA <- 0.1
# Specify recruitment as 15 years of high recruitment followed by 15 years of low recruitment
recruitment <- c(rep(23151200, 15), rep(757600, 15))
recruitment <- c(rnorm(15, 23151200, 1e3), rep(757600, 15))
#Run a simulation
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
plotStock(sim)
recruitment <- c(rnorm(15, 23151200, 1e4), rep(757600, 15))
#Run a simulation
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
plotStock(sim)
recruitment <- c(rnorm(15, 23151200, 1e5), rep(757600, 15))
#Run a simulation
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
plotStock(sim)
recruitment <- c(rnorm(15, 23151200, 1e10), rep(757600, 15))
#Run a simulation
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
plotStock(sim)
recruitment <- c(rnorm(15, 23151200, 1e6), rep(757600, 15))
#Run a simulation
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
plotStock(sim)
recruitment <- c(exp(rnorm(15, log(23151200), 1e6), rep(757600, 15))
#Run a simulation
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
recruitment <- c(exp(rnorm(15, log(23151200), 1e6)), rep(757600, 15))
#Run a simulation
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
plotStock(sim)
exp(rnorm(15, log(23151200), 1e6))
exp(rnorm(15, log(23151200), 10))
recruitment <- c(exp(rnorm(15, log(23151200), 10)), rep(757600, 15))
#Run a simulation
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
plotStock(sim)
recruitment <- c(exp(rnorm(15, log(23151200), 1)), rep(757600, 15))
#Run a simulation
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
plotStock(sim)
recruitment <- c(exp(rnorm(15, log(23151200), 0.001)), rep(757600, 15))
#Run a simulation
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
plotStock(sim)
recruitment <- c(exp(rnorm(15, log(23151200), 1)), rep(757600, 15))
#Run a simulation
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
plotStock(sim)
recruitment <- c(exp(rnorm(15, log(23151200), 0.5)), rep(757600, 15))
#Run a simulation
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
plotStock(sim)
recruitment <- c(exp(rnorm(15, log(23151200), 0.5)), exp(rnorm(15, log(757600), 0.5)))
#Run a simulation
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
plotStock(sim)
plot(sim)
plotActivity(sim)
#Run a simulation
sim <- project(params, R = recruitment, t_start = 1991, t_end = 2020)
plotActivity(sim)
plotEconomicImpact(sim)
sim@states
?project
library(FiRAM)
sim <- project(params, R = 1000, t_start = 2020, t_end = 2045)
?project
sim <- project(params, R = 7e5, t_start = 2020, t_end = 2045)
set.seed(123)
# Define log-normal recruitment.
R <- exp(rnorm(40, log(7e5), 0.5))
sim <- project(params, R = 7e5, t_start = 2020, t_end = 2045)
plot(sim)
# Define log-normal recruitment.
recruitment <- exp(rnorm(40, log(7e5), 0.5))
sim <- project(params, R = recruitment, t_start = 2020, t_end = 2045)
# Define log-normal recruitment.
recruitment <- exp(rnorm(26, log(7e5), 0.5))
sim <- project(params, R = recruitment, t_start = 2020, t_end = 2045)
plot(sim)
sim@states$R
plot.ts(sim@states$R)
rec_func <- function(stock){
a <- 1.5e-3; b <- 7e-4; h <- 1.3e-4
return(
1000 *a*stock/(b + a*h*stock)#*exp(rnorm(1,mean=0,sd=0.9))
)
}
sim <- project(params, R = rec_func, t_start = 2020, t_end = 2045)
sim <- project(params, R = rec_func, t_start = 2020, t_end = 2045, R_init = 7e5)
plot(sim)
plotStock(sim)
return(
1000 *a*stock/(b + a*h*stock)*exp(rnorm(1,mean=0,sd=0.9))
)
rec_func <- function(stock){
a <- 1.5e-3; b <- 7e-4; h <- 1.3e-4
return(
1000 *a*stock/(b + a*h*stock)*exp(rnorm(1,mean=0,sd=0.9))
)
}
sim <- project(params, R = rec_func, t_start = 2020, t_end = 2045, R_init = 7e5)
plotStock(sim)
class(class)
roxygen2::roxygenise()
?project
roxygen2::roxygenise()
?project
?project
